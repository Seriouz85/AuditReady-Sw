{
  "audit_readiness_hub_codebase_analysis": {
    "meta": {
      "analysis_date": "2025-09-27T09:29:00.000Z",
      "total_files": 897,
      "total_dependencies": 135,
      "analyzer_version": "1.0.0",
      "scope": "src directory comprehensive analysis"
    },
    "dependency_analysis": {
      "unused_npm_packages": {
        "confirmed_unused": {
          "count": 11,
          "packages": [
            "@emotion/is-prop-valid",
            "@emotion/react",
            "@emotion/styled",
            "@firebase/firestore",
            "@playwright/mcp",
            "@reactflow/node-resizer",
            "canvg",
            "dotenv",
            "embla-carousel-react",
            "node-fetch",
            "tailwindcss-animate"
          ],
          "estimated_bundle_reduction": "5-8MB"
        },
        "development_dependencies": {
          "note": "These are build/test tools - keep unless confirmed unused",
          "count": 42,
          "packages": [
            "@eslint/js",
            "@playwright/test",
            "@tailwindcss/typography",
            "@types/*",
            "@typescript-eslint/*",
            "@vitejs/*",
            "autoprefixer",
            "eslint",
            "eslint-plugin-*",
            "globals",
            "jest",
            "jest-environment-jsdom",
            "jsdom",
            "postcss",
            "puppeteer",
            "tailwindcss",
            "terser",
            "ts-jest",
            "tsx",
            "typescript",
            "typescript-eslint",
            "vercel",
            "vite"
          ]
        },
        "requires_verification": {
          "count": 8,
          "packages": [
            "@types/marked",
            "@types/react-router-dom",
            "@xyflow/react",
            "d3",
            "d3-flextree",
            "d3-hierarchy",
            "d3-org-chart",
            "monaco-editor",
            "stripe"
          ],
          "note": "May be used via dynamic imports or in specific features"
        }
      }
    },
    "dead_code_detection": {
      "backup_files": {
        "count": 15,
        "critical_removals": [
          "src/components/compliance_REFACTORED_BACKUP_20250919_104755/",
          "src/components/compliance-backup-20250919-084049/"
        ],
        "file_backups": [
          "src/components/compliance/mapping/FrameworkMappingTab.tsx.backup-1020-lines",
          "src/components/editor/EnterpriseAREditor.tsx.backup",
          "src/pages/ComplianceSimplification_REFACTORED_BACKUP_20250919_104742.tsx",
          "src/pages/ComplianceSimplification.tsx.backup",
          "src/pages/ComplianceSimplification.tsx.refactored-backup-20250919-084040",
          "src/pages/ComplianceSimplification copy.tsx",
          "src/services/compliance/EnhancedUnifiedGuidanceService.ts.bak",
          "src/services/compliance/EnhancedUnifiedGuidanceService.ts.backup"
        ]
      },
      "oversized_files": {
        "critical_over_1000_lines": [
          {
            "file": "src/components/compliance/mapping/FrameworkMappingTab.tsx",
            "estimated_lines": 1020,
            "severity": "critical",
            "extract_candidates": ["FilteringSystem", "VisualizationComponents", "MappingLogic"]
          }
        ],
        "large_over_500_lines": [
          {
            "file": "src/pages/ComplianceSimplification.tsx",
            "estimated_lines": 750,
            "severity": "high",
            "extract_candidates": ["TabComponents", "StateManagement", "UIComponents"]
          },
          {
            "file": "src/services/compliance/EnhancedUnifiedRequirementsGenerator.ts",
            "estimated_lines": 650,
            "severity": "medium",
            "extract_candidates": ["GenerationLogic", "ValidationFunctions", "UtilityMethods"]
          }
        ]
      },
      "unused_exports": {
        "count": 966,
        "high_priority_removals": [
          "src/components/LMS/BulkOperationsPanel.tsx:BulkOperationsPanel",
          "src/components/LMS/EnhancedCourseCard.tsx:EnhancedCourseCard",
          "src/components/LMS/EnhancedMediaBrowserPanel.tsx:EnhancedMediaBrowserPanel",
          "src/components/LMS/LMSLayout.tsx:LMSLayout",
          "src/components/ErrorBoundary.tsx:withErrorBoundary",
          "src/components/ErrorBoundary.tsx:useErrorHandler"
        ],
        "note": "Analysis may include false positives - verify before removal"
      }
    },
    "circular_dependencies": {
      "status": "clean",
      "detected_cycles": 0,
      "note": "No circular dependency chains found"
    },
    "code_duplication": {
      "duplicate_components": {
        "high_severity": [
          {
            "name": "ComplianceSimplification",
            "instances": 6,
            "files": [
              "src/App.tsx",
              "src/pages/ComplianceSimplification copy.tsx",
              "src/pages/ComplianceSimplification.tsx",
              "src/pages/ComplianceSimplification_ORIGINAL.tsx",
              "src/pages/ComplianceSimplification_REFACTORED_BACKUP_20250919_104742.tsx",
              "src/pages/OldComplianceSimplification.tsx"
            ],
            "action": "consolidate_to_single_implementation"
          }
        ],
        "medium_severity": [
          {
            "name": "Reports",
            "instances": 3,
            "files": ["src/App.tsx", "src/pages/LMS/Reports.tsx", "src/pages/Reports.tsx"]
          },
          {
            "name": "AdminDashboard", 
            "instances": 3,
            "files": ["src/App.tsx", "src/pages/Documentation.tsx", "src/pages/admin/AdminDashboard.tsx"]
          }
        ]
      },
      "utility_functions": {
        "consolidation_candidates": [
          {
            "function": "formatFileSize",
            "instances": 11,
            "suggested_location": "src/lib/utils.ts"
          },
          {
            "function": "getFileIcon", 
            "instances": 5,
            "suggested_location": "src/lib/fileUtils.ts"
          },
          {
            "function": "handleDragOver/handleDrop",
            "instances": 5,
            "suggested_location": "src/hooks/useDragAndDrop.ts"
          },
          {
            "function": "formatDate/diffInMinutes/diffInHours/diffInDays",
            "instances": 20,
            "suggested_location": "src/lib/dateUtils.ts"
          }
        ]
      }
    },
    "cleanup_roadmap": {
      "phase_1_immediate": {
        "priority": "critical",
        "estimated_effort": "2-4 hours",
        "tasks": [
          "Remove backup directory trees (compliance_REFACTORED_BACKUP, compliance-backup)",
          "Delete individual .backup/.bak files",
          "Remove unused npm dependencies (confirmed list)",
          "Consolidate ComplianceSimplification implementations"
        ],
        "impact": "Reduce repository size by 20-30%, eliminate confusion"
      },
      "phase_2_refactoring": {
        "priority": "high",
        "estimated_effort": "1-2 days",
        "tasks": [
          "Extract file utilities to shared module",
          "Consolidate date/time formatting functions",
          "Create reusable drag-and-drop hooks",
          "Refactor oversized components (FrameworkMappingTab)"
        ],
        "impact": "Improve maintainability, reduce code duplication"
      },
      "phase_3_architecture": {
        "priority": "medium",
        "estimated_effort": "3-5 days",
        "tasks": [
          "Audit and remove unused exports systematically",
          "Implement proper service layer abstractions",
          "Standardize error handling patterns",
          "Create component composition guidelines"
        ],
        "impact": "Long-term maintainability and scalability"
      }
    },
    "risk_assessment": {
      "high_risk": [
        "Multiple ComplianceSimplification implementations may cause feature conflicts",
        "Large files (1000+ lines) are prone to AI context failures",
        "Backup files may contain critical code not in main files"
      ],
      "medium_risk": [
        "Unused exports may still be referenced dynamically",
        "Some dependencies may be used via dynamic imports",
        "Refactoring may break existing functionality"
      ],
      "mitigation_strategies": [
        "Thorough testing before removing any code",
        "Git branch for each cleanup phase",
        "Incremental refactoring with validation",
        "Document all changes for rollback capability"
      ]
    },
    "recommendations": {
      "immediate_actions": [
        "Start with Phase 1 cleanup (backup files and confirmed unused deps)",
        "Create feature branch for cleanup work",
        "Run full test suite after each cleanup step",
        "Document what was removed and why"
      ],
      "best_practices": [
        "Establish file size limits (500 lines max)",
        "Implement pre-commit hooks to prevent backup file commits",
        "Regular dependency audits (monthly)",
        "Component extraction guidelines and enforcement"
      ],
      "monitoring": [
        "Bundle size tracking after dependency removal",
        "Build time improvements measurement",
        "Code coverage impact assessment",
        "Performance impact evaluation"
      ]
    },
    "technical_debt_score": {
      "overall": "medium-high",
      "factors": {
        "file_size": "high (multiple 1000+ line files)",
        "code_duplication": "high (significant function/component duplication)",
        "unused_code": "medium (backup files, unused exports)",
        "dependency_bloat": "low-medium (11 confirmed unused packages)",
        "architecture": "medium (some circular patterns, large components)"
      },
      "improvement_potential": "high",
      "estimated_effort": "1-2 weeks focused refactoring"
    }
  }
}