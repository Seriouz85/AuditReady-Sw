apiVersion: v1
kind: ServiceMonitor
metadata:
  name: audit-readiness-hub-monitor
  namespace: audit-readiness-hub
  labels:
    app: audit-readiness-hub
    component: monitoring
spec:
  selector:
    matchLabels:
      app: audit-readiness-hub
      component: frontend
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: audit-readiness-hub-alerts
  namespace: audit-readiness-hub
  labels:
    app: audit-readiness-hub
    component: monitoring
spec:
  groups:
  - name: audit-readiness-hub.rules
    rules:
    # High CPU usage alert
    - alert: HighCPUUsage
      expr: rate(container_cpu_usage_seconds_total{namespace="audit-readiness-hub",container="audit-readiness-hub"}[5m]) > 0.8
      for: 5m
      labels:
        severity: warning
        component: frontend
      annotations:
        summary: "High CPU usage detected"
        description: "CPU usage is above 80% for more than 5 minutes"
    
    # High memory usage alert
    - alert: HighMemoryUsage
      expr: container_memory_usage_bytes{namespace="audit-readiness-hub",container="audit-readiness-hub"} / container_spec_memory_limit_bytes > 0.9
      for: 5m
      labels:
        severity: warning
        component: frontend
      annotations:
        summary: "High memory usage detected"
        description: "Memory usage is above 90% for more than 5 minutes"
    
    # Pod restart alert
    - alert: PodRestartingTooOften
      expr: rate(kube_pod_container_status_restarts_total{namespace="audit-readiness-hub"}[1h]) > 0.1
      for: 5m
      labels:
        severity: warning
        component: frontend
      annotations:
        summary: "Pod restarting too often"
        description: "Pod {{ $labels.pod }} is restarting more than once every 10 minutes"
    
    # Application down alert
    - alert: ApplicationDown
      expr: up{job="audit-readiness-hub-monitor"} == 0
      for: 1m
      labels:
        severity: critical
        component: frontend
      annotations:
        summary: "Application is down"
        description: "The audit readiness hub application is not responding"
    
    # High error rate alert
    - alert: HighErrorRate
      expr: rate(nginx_http_requests_total{status=~"5.."}[5m]) / rate(nginx_http_requests_total[5m]) > 0.05
      for: 5m
      labels:
        severity: warning
        component: frontend
      annotations:
        summary: "High error rate detected"
        description: "Error rate is above 5% for more than 5 minutes"
    
    # Redis down alert
    - alert: RedisDown
      expr: up{job="redis-monitor"} == 0
      for: 1m
      labels:
        severity: critical
        component: cache
      annotations:
        summary: "Redis is down"
        description: "Redis cache is not responding"
    
    # High response time alert
    - alert: HighResponseTime
      expr: histogram_quantile(0.95, rate(nginx_http_request_duration_seconds_bucket[5m])) > 2
      for: 5m
      labels:
        severity: warning
        component: frontend
      annotations:
        summary: "High response time detected"
        description: "95th percentile response time is above 2 seconds"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboard-audit-hub
  namespace: audit-readiness-hub
  labels:
    grafana_dashboard: "1"
data:
  audit-readiness-hub.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Audit Readiness Hub Dashboard",
        "tags": ["audit-readiness-hub"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Request Rate",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(nginx_http_requests_total[5m])",
                "legendFormat": "{{method}} {{status}}"
              }
            ],
            "yAxes": [
              {
                "label": "requests/sec"
              }
            ]
          },
          {
            "id": 2,
            "title": "Response Time",
            "type": "graph",
            "targets": [
              {
                "expr": "histogram_quantile(0.95, rate(nginx_http_request_duration_seconds_bucket[5m]))",
                "legendFormat": "95th percentile"
              },
              {
                "expr": "histogram_quantile(0.50, rate(nginx_http_request_duration_seconds_bucket[5m]))",
                "legendFormat": "50th percentile"
              }
            ],
            "yAxes": [
              {
                "label": "seconds"
              }
            ]
          },
          {
            "id": 3,
            "title": "Pod CPU Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(container_cpu_usage_seconds_total{namespace=\"audit-readiness-hub\",container=\"audit-readiness-hub\"}[5m])",
                "legendFormat": "{{pod}}"
              }
            ],
            "yAxes": [
              {
                "label": "CPU cores"
              }
            ]
          },
          {
            "id": 4,
            "title": "Pod Memory Usage",
            "type": "graph",
            "targets": [
              {
                "expr": "container_memory_usage_bytes{namespace=\"audit-readiness-hub\",container=\"audit-readiness-hub\"}",
                "legendFormat": "{{pod}}"
              }
            ],
            "yAxes": [
              {
                "label": "bytes"
              }
            ]
          },
          {
            "id": 5,
            "title": "Redis Operations",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(redis_commands_processed_total[5m])",
                "legendFormat": "Commands/sec"
              }
            ]
          },
          {
            "id": 6,
            "title": "Error Rate",
            "type": "singlestat",
            "targets": [
              {
                "expr": "rate(nginx_http_requests_total{status=~\"5..\"}[5m]) / rate(nginx_http_requests_total[5m]) * 100",
                "legendFormat": "Error Rate %"
              }
            ],
            "thresholds": "1,5",
            "colorBackground": true
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "10s"
      }
    }